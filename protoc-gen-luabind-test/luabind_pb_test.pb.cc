// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: luabind_pb_test.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "luabind_pb_test.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace luabindpbtest {

namespace {

const ::google::protobuf::Descriptor* MTest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MTest_reflection_ = NULL;
const ::google::protobuf::Descriptor* MTestList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MTestList_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* ETest_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_luabind_5fpb_5ftest_2eproto() {
  protobuf_AddDesc_luabind_5fpb_5ftest_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "luabind_pb_test.proto");
  GOOGLE_CHECK(file != NULL);
  MTest_descriptor_ = file->message_type(0);
  static const int MTest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MTest, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MTest, value_),
  };
  MTest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MTest_descriptor_,
      MTest::default_instance_,
      MTest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MTest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MTest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MTest));
  MTestList_descriptor_ = file->message_type(1);
  static const int MTestList_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MTestList, i_t_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MTestList, s_t_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MTestList, b_t_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MTestList, e_t_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MTestList, one_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MTestList, i_all_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MTestList, s_all_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MTestList, m_all_),
  };
  MTestList_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MTestList_descriptor_,
      MTestList::default_instance_,
      MTestList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MTestList, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MTestList, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MTestList));
  ETest_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_luabind_5fpb_5ftest_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MTest_descriptor_, &MTest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MTestList_descriptor_, &MTestList::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_luabind_5fpb_5ftest_2eproto() {
  delete MTest::default_instance_;
  delete MTest_reflection_;
  delete MTestList::default_instance_;
  delete MTestList_reflection_;
}

void protobuf_AddDesc_luabind_5fpb_5ftest_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\025luabind_pb_test.proto\022\rluabindpbtest\"$"
    "\n\005MTest\022\014\n\004name\030\001 \002(\t\022\r\n\005value\030\002 \002(\r\"\273\001\n"
    "\tMTestList\022\013\n\003i_t\030\001 \002(\r\022\013\n\003s_t\030\002 \002(\t\022\013\n\003"
    "b_t\030\003 \002(\014\022!\n\003e_t\030\004 \002(\0162\024.luabindpbtest.E"
    "Test\022!\n\003one\030\005 \002(\0132\024.luabindpbtest.MTest\022"
    "\r\n\005i_all\030\006 \003(\r\022\r\n\005s_all\030\007 \003(\t\022#\n\005m_all\030\010"
    " \003(\0132\024.luabindpbtest.MTest*:\n\005ETest\022\017\n\013k"
    "EnumTest_1\020\001\022\017\n\013kEnumTest_2\020\002\022\017\n\013kEnumTe"
    "st_3\020\003B\021\n\rluabindpbtestH\002", 345);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "luabind_pb_test.proto", &protobuf_RegisterTypes);
  MTest::default_instance_ = new MTest();
  MTestList::default_instance_ = new MTestList();
  MTest::default_instance_->InitAsDefaultInstance();
  MTestList::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_luabind_5fpb_5ftest_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_luabind_5fpb_5ftest_2eproto {
  StaticDescriptorInitializer_luabind_5fpb_5ftest_2eproto() {
    protobuf_AddDesc_luabind_5fpb_5ftest_2eproto();
  }
} static_descriptor_initializer_luabind_5fpb_5ftest_2eproto_;
const ::google::protobuf::EnumDescriptor* ETest_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ETest_descriptor_;
}
bool ETest_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#ifndef _MSC_VER
const int MTest::kNameFieldNumber;
const int MTest::kValueFieldNumber;
#endif  // !_MSC_VER

MTest::MTest()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void MTest::InitAsDefaultInstance() {
}

MTest::MTest(const MTest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void MTest::SharedCtor() {
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  value_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MTest::~MTest() {
  SharedDtor();
}

void MTest::SharedDtor() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (this != default_instance_) {
  }
}

void MTest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MTest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MTest_descriptor_;
}

const MTest& MTest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_luabind_5fpb_5ftest_2eproto();
  return *default_instance_;
}

MTest* MTest::default_instance_ = NULL;

MTest* MTest::New() const {
  return new MTest;
}

void MTest::Swap(MTest* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata MTest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MTest_descriptor_;
  metadata.reflection = MTest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MTestList::kITFieldNumber;
const int MTestList::kSTFieldNumber;
const int MTestList::kBTFieldNumber;
const int MTestList::kETFieldNumber;
const int MTestList::kOneFieldNumber;
const int MTestList::kIAllFieldNumber;
const int MTestList::kSAllFieldNumber;
const int MTestList::kMAllFieldNumber;
#endif  // !_MSC_VER

MTestList::MTestList()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void MTestList::InitAsDefaultInstance() {
  one_ = const_cast< ::luabindpbtest::MTest*>(&::luabindpbtest::MTest::default_instance());
}

MTestList::MTestList(const MTestList& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void MTestList::SharedCtor() {
  _cached_size_ = 0;
  i_t_ = 0u;
  s_t_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  b_t_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  e_t_ = 1;
  one_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MTestList::~MTestList() {
  SharedDtor();
}

void MTestList::SharedDtor() {
  if (s_t_ != &::google::protobuf::internal::kEmptyString) {
    delete s_t_;
  }
  if (b_t_ != &::google::protobuf::internal::kEmptyString) {
    delete b_t_;
  }
  if (this != default_instance_) {
    delete one_;
  }
}

void MTestList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MTestList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MTestList_descriptor_;
}

const MTestList& MTestList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_luabind_5fpb_5ftest_2eproto();
  return *default_instance_;
}

MTestList* MTestList::default_instance_ = NULL;

MTestList* MTestList::New() const {
  return new MTestList;
}

void MTestList::Swap(MTestList* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata MTestList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MTestList_descriptor_;
  metadata.reflection = MTestList_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace luabindpbtest

// @@protoc_insertion_point(global_scope)
